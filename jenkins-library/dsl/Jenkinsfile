node()
{
    def gitlab_trigger_branch = params.getOrDefault("BUILD_BRANCH", "main")
    def job_root_path = params.getOrDefault("JOB_ROOT_PATH", "main")
	stage('gitlab clone')
	{
		checkout scm
	}
	stage('Dump ENV')
	{

		sh('env | sort -n')
		print("Gitlab Trigger Branch: ${params.BUILD_BRANCH}")
	}

	/*stage ('Fake Build')
	{
	    //updateGitlabCommitStatus name: 'build', state: 'pending'
	    echo ("build start test")
	    sh('sleep 30')
	    echo ("build start end")
	    //updateGitlabCommitStatus name: 'build', state: 'success'
	}*/


    stage('Create Jobs')
    {/*
    'jenkins-library/dsl/jobs/docker_ansible.groovy',
              'jenkins-library/dsl/jobs/docker_terraform.groovy',
              'jenkins-library/dsl/jobs/docker_consul.groovy',
              'jenkins-library/dsl/jobs/docker_vault.groovy',
              'jenkins-library/dsl/jobs/docker_packer.groovy',
              'jenkins-library/dsl/jobs/ubi8_hardened.groovy',
              'jenkins-library/dsl/jobs/packer_goldenos.groovy'
    */
         jobDsl targets: ['jenkins-library/dsl/jobs/build_root.groovy',
                            'jenkins-library/dsl/jobs/ubi8_hardened.groovy'
          ].join('\n'),
         removedJobAction: 'DELETE',
         removedViewAction: 'DELETE',
         lookupStrategy: 'SEED_JOB',
         additionalParameters: [BUILD_BRANCH: gitlab_trigger_branch, JOB_ROOT: "${job_root_path}"]
    }

	/*stage('Run Build Jobs')
	{
		build job: '/build-root/build-master', parameters: [[$class: 'StringParameterValue', name: 'BUILD_BRANCH', value: gitlab_trigger_branch]]
	}*/
}
