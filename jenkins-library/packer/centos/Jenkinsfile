node("DOCKER")
{
    def build_branch = params.getOrDefault("BUILD_BRANCH","main")

    ws("/mnt/scratch/appdata/jenkins-workspace")
    {

        stage("Git Checkout")
        {
            checkout([$class: 'GitSCM', branches: [[name: build_branch]], extensions: [], userRemoteConfigs: [[credentialsId: 'jenkins_ssh', url: 'http://gitlab.antlinux.local:30080/antman/data_center.git']]])
        }

        stage ("ENV dump")
        {
            sh('env | sort -n')
            //print(env.getEnvironment())
            print(params)
        }


        stage("Stage01 - ISO")
        {
            sh 'docker login nexus.antlinux.local:8443 -u packer -p packer'
            sh '''docker run --pull always \
                    -v ${WORKSPACE}/packer-library/centos:/packer \
                    nexus.antlinux.local:8443/custom-base/hashicorp/packer:latest \
                    build -timestamp-ui -on-error=cleanup -force \
                    -var-file=vars/common_vsphere/default.json \
                    -var-file=vars/common_vm/default.json \
                    -var-file=vars/stage1_iso/centos7-7.9.2009.json \
                    -only="stage01.vsphere-iso.centos_iso" /packer
            '''
        }
    }
	

	properties([ 	disableConcurrentBuilds(), 
			gitLabConnection(gitLabConnection: 'gitlab1', jobCredentialId: ''),
			parameters([string(defaultValue: 'main', name: 'BUILD_BRANCH')])
			])
}
