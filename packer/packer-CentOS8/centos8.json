{
  "builders": [
    {
      "CPUs": "{{user `vm-cpu-num`}}",
      "RAM": "{{user `vm-mem-size`}}",
      "RAM_reserve_all": true,
      "boot_wait": "{{ user `boot_wait` }}",
      "boot_command": [
        "<tab><bs><bs><bs><bs><bs>text ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/ks.cfg<enter>"
      ],
      "boot_order": "disk,cdrom",
      "cluster": "{{user `cluster`}}",
      "convert_to_template": "true",
      "datacenter": "{{user `datacenter`}}",
      "datastore": "{{user `datastore`}}",
      "disk_controller_type": "pvscsi",
      "folder": "{{user `folder`}}",
      "http_directory": "http",
      "guest_os_type": "centos8_64Guest",
      "shutdown_command": "echo 'packer'|sudo -S /sbin/halt -h -p",

      "host": "{{user `host`}}",
      "insecure_connection": "true",
      "iso_checksum": "{{user `iso-checksum-type`}}:{{user `iso-checksum`}}",
      "iso_urls": "{{user `iso-url`}}",
      "network_adapters": [
        {
          "network": "{{user `network`}}",
          "network_card": "vmxnet3"
        }
      ],
      "password": "{{user `vcenter-password`}}",
      "ssh_password": "{{user `ssh-password`}}",
      "ssh_username": "{{user `ssh-username`}}",
      "ssh_timeout": "30m",
      "storage": [
        {
          "disk_size": "{{user `vm-disk-size`}}",
          "disk_thin_provisioned": true
        }
      ],
      "type": "vsphere-iso",
      "username": "{{user `vcenter-username`}}",
      "vcenter_server": "{{user `vcenter-server`}}",
      "vm_name": "{{user `vm-name`}}"
    }
  ],
  "provisioners": [
    {
      "execute_command": "echo 'packer'|{{.Vars}} sudo -S -E bash '{{.Path}}'",
      "inline": [
        "dnf -y update",
        "dnf -y install python3",
        "alternatives --set python /usr/bin/python3",
        "pip3 install ansible"
      ],
      "type": "shell"
    },
    {
      "playbook_file": "scripts/setup.yml",
      "type": "ansible-local"
    },
    {
      "execute_command": "echo 'packer'|{{.Vars}} sudo -S -E bash '{{.Path}}'",
      "scripts": [
        "scripts/cleanup.sh"
      ],
      "type": "shell"
    }
  ],
  "post-processors": [
	{
		"type" : "manifest",
		"output" : "stage-1-manifest.json"
	}
  ]
}

